{"version":3,"sources":["assets/noPosterSmall.png","Components/Section.js","Components/Loader.js","Components/Message.js","Components/Poster.js","Routes/Home/HomePresenter.js","api.js","Routes/Home/HomeContainer.js","Routes/Home/index.js","Routes/TV/TVPresenter.js","Routes/TV/TVContainer.js","Routes/TV/index.js","Components/Header.js","Routes/Search/SearchPresenter.js","Routes/Search/SearchContainer.js","Routes/Search/index.js","Routes/Detail/DetailPresenter.js","Routes/Detail/DetailContainer.js","Routes/Detail/index.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["Container","styled","div","Title","span","Grid","Section","title","children","role","Text","props","color","Message","text","Image","bgUrl","Rating","ImageContainer","Year","Poster","id","imageUrl","rating","year","isMovie","to","require","default","length","substring","HomePresenter","nowPlaying","popular","upcoming","loading","error","Helmet","Loader","map","movie","poster_path","original_title","vote_average","release_date","api","axios","create","baseURL","params","api_key","language","movieApi","get","append_to_response","term","query","encodeURIComponent","tvApi","state","a","data","results","this","setState","React","Component","HomeContainer","TVPresenter","topRated","airingToday","show","original_name","first_air_date","TVContainer","Header","header","List","ul","Item","li","current","SLink","Link","withRouter","pathname","location","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","onSubmit","placeholder","value","onChange","event","preventDefault","searchByTerm","target","SearchContainer","Backdrop","bgImage","Content","Cover","Data","h3","ItemContainer","Divider","Overview","p","DetailPresenter","result","backdrop_path","runtime","episode_run_time","genres","genre","index","name","overview","includes","match","push","history","parsedId","parseInt","isNaN","DetailContainer","path","exact","component","Home","TV","Search","Detail","from","globalStyles","createGlobalStyle","reset","App","Router","GlobalStyles","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c941976c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/noPosterSmall.ea2ad102.png\";","import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport styled from \"styled-components\"\r\n\r\nconst Container = styled.div`\r\n    :not(:last-child) {\r\n        margin-bottom: 50px;\r\n    }\r\n`;\r\n\r\nconst Title = styled.span`\r\n    font-size: 14px;\r\n    font-weight: 600;\r\n`;\r\n\r\nconst Grid = styled.div`\r\n    margin-top: 25px;\r\n    display: grid;\r\n    grid-template-columns: repeat(auto-fill, 125px);\r\n    grid-gap: 25px;\r\n`;\r\n\r\nconst Section = ({title, children}) => (\r\n    <Container>\r\n        <Title>{title}</Title>\r\n        <Grid>{children}</Grid>\r\n    </Container>\r\n)\r\n\r\nSection.propTypes= {\r\n    title: PropTypes.string.isRequired,\r\n    children: PropTypes.oneOfType([\r\n        PropTypes.arrayOf(PropTypes.node),\r\n        PropTypes.node\r\n    ])\r\n}\r\n\r\nexport default Section","import React from \"react\"\r\nimport styled from \"styled-components\"\r\n\r\nconst Container = styled.div`\r\n    height: 100vh;\r\n    width: 100vw;\r\n    display: flex;\r\n    justify-content: center;\r\n    font-size: 28px;\r\n    margin-top: 20px;\r\n`;\r\n\r\nexport default () => (\r\n    <Container>\r\n        <span role=\"img\" aria-label=\"Loading\">\r\n            ⏰\r\n        </span>\r\n    </Container>\r\n)","import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport styled from \"styled-components\"\r\n\r\nconst Container = styled.div`\r\n    width: 100vw;\r\n    display: flex;\r\n    justify-content: center;\r\n`;\r\n\r\nconst Text = styled.span`\r\n    color: ${props => props.color}\r\n`;\r\n\r\nconst Message = ({text, color}) =>(\r\n    <Container>\r\n        <Text color={color}>\r\n            {text}\r\n        </Text>\r\n    </Container>\r\n)\r\n\r\nMessage.propTypes = {\r\n    text:PropTypes.string.isRequired,\r\n    color:PropTypes.string.isRequired\r\n}\r\n\r\nexport default Message;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n    font-size: 12px;\r\n`;\r\n\r\nconst Image = styled.div`\r\n    background-image: url(${props => props.bgUrl});\r\n    height: 180px;\r\n    background-size: cover;\r\n    border-radius: 4px;\r\n    background-position: center center;\r\n    transition: opacity .1s linear;\r\n`;\r\n\r\nconst Rating = styled.span`\r\n    bottom: 5px;\r\n    right: 5px;\r\n    position: absolute;\r\n    opacity: 0;\r\n    transition: opacity .1s linear;\r\n`;\r\n\r\nconst ImageContainer = styled.div`\r\n    margin-bottom: 5px;\r\n    position: relative;\r\n    &:hover {\r\n        ${Image} {\r\n            opacity: 0.3;\r\n        }\r\n        ${Rating} {\r\n            opacity: 1\r\n        }\r\n    }\r\n`;\r\n\r\nconst Title = styled.span`\r\n    display: block;\r\n    margin-bottom: 3px;\r\n`;\r\n\r\nconst Year = styled.span`\r\n    font-size: 10px;\r\n    color: rgba(255, 255, 255, 0.5);\r\n`;\r\n\r\nconst Poster = ({id, imageUrl, title, rating, year, isMovie = false}) => (\r\n   <Link to={isMovie ? `/movie/${id}` : `/show/${id}`}>\r\n        <Container>\r\n            <ImageContainer>\r\n                <Image \r\n                    bgUrl={imageUrl \r\n                        ? `https://image.tmdb.org/t/p/w300${imageUrl}` \r\n                        : require(\"../assets/noPosterSmall.png\").default\r\n                    }\r\n                />\r\n                <Rating>\r\n                    <span role=\"img\" aria-label=\"rating\">\r\n                        ⭐\r\n                    </span>{\" \"}\r\n                    {rating}/10\r\n                </Rating>\r\n            </ImageContainer>\r\n            <Title>\r\n                {title.length > 18 ? `${title.substring(0, 18)}...` : title }\r\n            </Title>\r\n            <Year>{year}</Year>\r\n        </Container>\r\n   </Link>\r\n);\r\n\r\nPoster.propTypes = {\r\n    id: PropTypes.number.isRequired,\r\n    imageUrl:PropTypes.string,\r\n    title: PropTypes.string.isRequired,\r\n    rating: PropTypes.number,\r\n    year: PropTypes.string,\r\n    isMovie: PropTypes.bool\r\n};\r\n\r\nexport default Poster;","import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport styled from \"styled-components\"\r\nimport Helmet from \"react-helmet\"\r\nimport Section from \"Components/Section\"\r\nimport Loader from \"Components/Loader\"\r\nimport Message from \"Components/Message\"\r\nimport Poster from \"Components/Poster\"\r\n\r\nconst Container = styled.div`\r\n    padding: 20px;\r\n`;\r\n\r\nconst HomePresenter = ({ nowPlaying, popular, upcoming, loading, error}) => (\r\n    <>\r\n        <Helmet>\r\n            <title>Movies | Nomfilx</title>\r\n        </Helmet>\r\n        {loading ? (\r\n            <Loader />\r\n        ) : (\r\n            <Container>\r\n                <Helmet>\r\n                    <title>Movies | Nomfilx</title>\r\n                </Helmet>\r\n                {nowPlaying && nowPlaying.length > 0 && (\r\n                    <Section title=\"Now Playing\">\r\n                        {nowPlaying.map(movie =>(\r\n                        <Poster\r\n                            key={movie.id}\r\n                            id={movie.id}\r\n                            imageUrl={movie.poster_path}\r\n                            title={movie.original_title} \r\n                            rating={movie.vote_average}\r\n                            year={movie.release_date.substring(0,4)}\r\n                            isMovie={true}\r\n                        />\r\n                        ))}\r\n                    </Section>\r\n                )}\r\n                {upcoming && upcoming.length > 0 && (\r\n                    <Section title=\"Upcoming Movies\">\r\n                        {upcoming.map(movie => (\r\n                        <Poster\r\n                                key={movie.id}\r\n                                id={movie.id}\r\n                                imageUrl={movie.poster_path}\r\n                                title={movie.original_title} \r\n                                rating={movie.vote_average}\r\n                                year={movie.release_date.substring(0,4)}\r\n                                isMovie={true}\r\n                            />\r\n                        ))}\r\n                    </Section>\r\n                )}\r\n                {popular && popular.length > 0 && (\r\n                    <Section title=\"Popular Movies\">\r\n                        {popular.map(movie => (\r\n                        <Poster\r\n                        key={movie.id}\r\n                        id={movie.id}\r\n                        imageUrl={movie.poster_path}\r\n                        title={movie.original_title} \r\n                        rating={movie.vote_average}\r\n                        year={movie.release_date.substring(0,4)}\r\n                        isMovie={true}\r\n                        />\r\n                        ))}\r\n                    </Section>\r\n                )}\r\n                {error && <Message color=\"#e74c3c\" text={error}/>}\r\n            </Container>\r\n        )}\r\n    </>\r\n);   \r\n\r\n\r\n\r\nHomePresenter.propTypes = {\r\n    nowPlaying:PropTypes.array,\r\n    popular:PropTypes.array,\r\n    upcoming:PropTypes.array,\r\n    loading:PropTypes.bool.isRequired,\r\n    error:PropTypes.string\r\n}\r\n\r\nexport default HomePresenter","import axios from \"axios\"\r\n\r\nconst api =  axios.create({\r\n    baseURL: \"https://api.themoviedb.org/3/\",\r\n    params: {\r\n        api_key: \"3e9b4be43d881eef145bee9bac37ae54\",\r\n        language: \"en-US\"\r\n    }\r\n})\r\n\r\n\r\nexport const movieApi = {\r\n    nowPlaying: () => api.get(\"movie/now_playing\"),\r\n    upcoming: () => api.get(\"movie/upcoming\"),\r\n    popular: () => api.get(\"movie/popular\"),\r\n    movieDetail: id => api.get(`movie/${id}`, {\r\n        params: {\r\n            append_to_response: 'videos'\r\n        }\r\n    }),\r\n    search : (term) => \r\n        api.get(\"search/movie\", {\r\n            params: {\r\n                query: encodeURIComponent(term)\r\n        }\r\n    })\r\n}\r\n\r\nexport const tvApi = {\r\n    topRated: () => api.get(\"tv/top_rated\"),\r\n    popular: () => api.get(\"tv/popular\"),\r\n    airingToday: () => api.get(\"tv/airing_today\"),\r\n    showDetail: id => api.get(`tv/${id}`, {\r\n        params: {\r\n            append_to_response: 'videos'\r\n        }\r\n    }),\r\n    search : (term) => \r\n        api.get(\"search/tv\", {\r\n            params: {\r\n                query: encodeURIComponent(term)\r\n        }\r\n    })\r\n}","import React from \"react\"\r\nimport HomePresenter from \"./HomePresenter\"\r\nimport { movieApi } from \"api\"\r\n\r\nexport default class extends React.Component {\r\n    state = {\r\n        nowPlaying: null,\r\n        upcoming: null,\r\n        popular: null,\r\n        error: null,\r\n        loading: true\r\n    }\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            const {\r\n                data: {results : nowPlaying}\r\n            } = await movieApi.nowPlaying();\r\n            const {\r\n                data: {results: upcoming}\r\n            } = await movieApi.upcoming();\r\n            const {\r\n                data: {results: popular}\r\n            } = await movieApi.popular()\r\n            this.setState ({\r\n                nowPlaying,\r\n                upcoming,\r\n                popular\r\n            })   \r\n        } catch {\r\n            this.setState({\r\n                error: \"Can't find movie infomation.\"\r\n            })\r\n        } finally {\r\n            this.setState({\r\n                loading: false\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { nowPlaying, upcoming, popular, error, loading} = this.state;\r\n        return (\r\n            <HomePresenter \r\n            nowPlaying ={nowPlaying} \r\n            upcoming={upcoming} \r\n            popular={popular}\r\n            error={error}\r\n            loading={loading} \r\n            />\r\n        )\r\n    }\r\n}","import HomeContainer from \"./HomeContainer\"\r\n\r\nexport default HomeContainer","import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport styled from \"styled-components\"\r\nimport Helmet from \"react-helmet\"\r\nimport Section from \"Components/Section\";\r\nimport Loader from \"Components/Loader\";\r\nimport Message from \"Components/Message\";\r\nimport Poster from \"Components/Poster\";\r\n\r\nconst Container = styled.div`\r\n    padding: 20px;\r\n`;\r\n\r\nconst TVPresenter = ({ topRated, popular, airingToday, loading, error}) => (\r\n    <>\r\n        <Helmet>\r\n            <title>TV Shows | Nomfilx</title>\r\n        </Helmet>\r\n        {loading ? (\r\n            <Loader />\r\n        ) : (\r\n        <Container>\r\n            {topRated && topRated.length > 0 && (\r\n                <Section title=\"Top Rated Shows\">\r\n                    {topRated.map(show =>(\r\n                        <Poster\r\n                            key={show.id}\r\n                            id={show.id}\r\n                            imageUrl={show.poster_path}\r\n                            title={show.original_name} \r\n                            rating={show.vote_average}\r\n                            year={show.first_air_date.substring(0,4)}\r\n                        />\r\n                    ))}\r\n                </Section>\r\n            )}\r\n            {popular && popular.length > 0 && (\r\n                <Section title=\"Popular Shows\">\r\n                    {popular.map(show =>(\r\n                        <Poster\r\n                            key={show.id}\r\n                            id={show.id}\r\n                            imageUrl={show.poster_path}\r\n                            title={show.original_name} \r\n                            rating={show.vote_average}\r\n                            year={show.first_air_date.substring(0,4)}\r\n                        />\r\n                    ))}\r\n                </Section>\r\n            )}\r\n            {airingToday && airingToday.length > 0 && (\r\n                <Section title=\"Airing Today\">\r\n                    {airingToday.map(show =>(\r\n                        <Poster\r\n                            key={show.id}\r\n                            id={show.id}\r\n                            imageUrl={show.poster_path}\r\n                            title={show.original_name} \r\n                            rating={show.vote_average}\r\n                            year={show.first_air_date.substring(0,4)}\r\n                        />\r\n                    ))}\r\n                </Section>\r\n            )}\r\n            {error && <Message color=\"#e74c3c\" text={error}/>}\r\n        </Container>\r\n        )}\r\n    </>\r\n) \r\n \r\n\r\nTVPresenter.propTypes = {\r\n    topRated:PropTypes.array,\r\n    popular:PropTypes.array,\r\n    airingToday:PropTypes.array,\r\n    loading:PropTypes.bool.isRequired,\r\n    error:PropTypes.string\r\n}\r\n\r\nexport default TVPresenter","import React from \"react\"\r\nimport TVPresenter from \"./TVPresenter\"\r\nimport { tvApi } from \"api\"\r\n\r\nexport default class extends React.Component {\r\n    state= {\r\n        topRated: null,\r\n        popular: null,\r\n        airingToday: null,\r\n        loading: true, \r\n        error: null\r\n    }\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            const {\r\n                data: {results: topRated}\r\n            } = await tvApi.topRated();\r\n            const {\r\n                data: {results: popular}\r\n            } = await tvApi.popular();\r\n            const {\r\n                data: {results: airingToday}\r\n            } = await tvApi.airingToday();\r\n            this.setState({ topRated, popular, airingToday })\r\n        } catch {\r\n            this.setState ({\r\n                error: \"Can't find TV infomation.\"\r\n            })          \r\n        } finally {\r\n            this.setState({\r\n                loading: false\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {topRated, popular, airingToday, loading, error} = this.state;\r\n        return(\r\n            <TVPresenter \r\n            topRated = {topRated}\r\n            popular = {popular}\r\n            airingToday ={airingToday}\r\n            loading = {loading}\r\n            error = {error}\r\n            />\r\n        )\r\n    }\r\n}","import TVContainer from \"./TVContainer\"\r\n\r\nexport default TVContainer","import React from \"react\"\r\nimport { Link, withRouter } from \"react-router-dom\"\r\nimport styled from \"styled-components\"\r\n\r\nconst Header = styled.header`\r\n    color: white;\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 50px;\r\n    display: flex;\r\n    align-items: center;\r\n    background-color: rgba(20,20,20,0.8);\r\n    z-index: 10;\r\n    box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\r\n`;\r\n\r\nconst List = styled.ul`\r\n    display: flex;\r\n`;\r\n\r\nconst Item = styled.li`\r\n    width: 80px;\r\n    height: 50px;\r\n    text-align: center;\r\n    border-bottom: 3px solid \r\n    ${props => (props.current ? \"#3498db\" : \"transparent\")};\r\n    transition: border-bottom 0.5s ease-in-out;\r\n`;\r\n\r\nconst SLink = styled(Link)`\r\n    height: 50px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n`;\r\n\r\n\r\nexport default withRouter(({location:{pathname}}) => (\r\n    <Header>\r\n    <List>\r\n        <Item current={pathname === \"/\"}>\r\n            <SLink to=\"/\">Movies</SLink>\r\n        </Item>\r\n        <Item current={pathname ===\"/tv\"}>\r\n            <SLink to=\"/tv\">TV</SLink>\r\n        </Item>\r\n        <Item current={pathname ===\"/search\"}>\r\n            <SLink to=\"/search\">Search</SLink>\r\n        </Item>\r\n    </List>\r\n</Header>\r\n));\r\n\r\n\r\n","import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport styled from \"styled-components\"\r\nimport Helmet from \"react-helmet\"\r\nimport Loader from \"Components/Loader\";\r\nimport Section from \"Components/Section\";\r\nimport Message from \"Components/Message\";\r\nimport Poster from \"Components/Poster\";\r\n\r\nconst Container = styled.div`\r\n    padding: 0px 20px;\r\n`;\r\n\r\nconst Form = styled.form`\r\n    margin-bottom: 50px;\r\n    width: 100%\r\n`;\r\n\r\nconst Input = styled.input`\r\n    all: unset;\r\n    font-size: 28px;\r\n    width: 100%\r\n`;\r\n\r\nconst SearchPresenter = ({ \r\n    movieResults, \r\n    tvResults,\r\n    loading, \r\n    searchTerm, \r\n    error, \r\n    handleSubmit,\r\n    updateTerm\r\n}) => (\r\n    <Container>\r\n        <Helmet>\r\n            <title>Search | Nomfilx</title>\r\n        </Helmet>\r\n        <Form onSubmit={handleSubmit}>\r\n            <Input \r\n                placeholder=\"Search Movies or TV Shows...\" \r\n                value={searchTerm}\r\n                onChange={updateTerm}\r\n            />\r\n        </Form>\r\n        {loading ? (\r\n            <Loader />\r\n        ) : (\r\n            <>\r\n                {movieResults && movieResults.length > 0 && (\r\n                    <Section title=\"Movie Results\">\r\n                        {movieResults.map(movie => (\r\n                            <Poster\r\n                               key={movie.id}\r\n                               id={movie.id}\r\n                               imageUrl={movie.poster_path}\r\n                               title={movie.original_title} \r\n                               rating={movie.vote_average}\r\n                               year={movie.release_date.substring(0,4)}\r\n                               isMovie={true}\r\n                           />\r\n                        ))}\r\n                    </Section>\r\n                )}\r\n                {tvResults && tvResults.length > 0 && (\r\n                    <Section title=\"TV Show Results\">\r\n                        {tvResults.map(show => (\r\n                            <Poster\r\n                                key={show.id}\r\n                                id={show.id}\r\n                                imageUrl={show.poster_path}\r\n                                title={show.original_name} \r\n                                rating={show.vote_average}\r\n                                year={show.first_air_date.substring(0,4)}\r\n                            />\r\n                        ))}\r\n                    </Section>\r\n                )}\r\n                {error && <Message color=\"#e74c3c\" text={error} />}\r\n                {tvResults && \r\n                    movieResults && \r\n                    tvResults.length === 0 && \r\n                    movieResults.length === 0 && (\r\n                        <Message text=\"Nothing found\" color=\"#95a5a6\" />\r\n                    )}\r\n            </>\r\n        )}\r\n    </Container>\r\n);\r\n\r\nSearchPresenter.propTypes = {\r\n    movieResults:PropTypes.array,\r\n    tvResultes:PropTypes.array,\r\n    loading:PropTypes.bool.isRequired,\r\n    searchTerm: PropTypes.string,\r\n    error:PropTypes.string,\r\n    handleSubmit: PropTypes.func.isRequired,\r\n    updateTerm: PropTypes.func.isRequired\r\n}\r\n\r\nexport default SearchPresenter","import React from \"react\"\r\nimport SearchPresenter from \"./SearchPresenter\"\r\nimport { movieApi, tvApi } from \"api\";\r\n\r\nexport default class extends React.Component {\r\n    state= {\r\n        movieResults: null,\r\n        tvResults: null,\r\n        searchTerm: \"\",\r\n        loading: false, \r\n        error: null\r\n    }\r\n\r\n    handleSubmit = event => {\r\n        event.preventDefault()\r\n        const {searchTerm} = this.state;\r\n        if(searchTerm !==\"\") {\r\n            this.searchByTerm()\r\n        }\r\n    }\r\n\r\n    updateTerm = event => {\r\n        const { \r\n            target: { value }\r\n        } = event\r\n        this.setState({\r\n            searchTerm: value\r\n        })\r\n    }\r\n\r\n    searchByTerm = async () => {\r\n        const {searchTerm} = this.state;\r\n        this.setState({ loading: true })\r\n        try {\r\n            const {\r\n                data:{results: movieResults}\r\n            } = await movieApi.search(searchTerm)\r\n            const {\r\n                data:{results: tvResults}\r\n            } = await tvApi.search(searchTerm)\r\n            this.setState ({\r\n                movieResults,\r\n                tvResults\r\n            });\r\n        } catch {\r\n            this.setState ({\r\n                error: \"Can't find results.\"\r\n            })\r\n        } finally {\r\n            this.setState ({\r\n                loading: false\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {movieResults, tvResults, searchTerm, loading, error} = this.state;\r\n        return(\r\n            <SearchPresenter \r\n            movieResults = {movieResults}\r\n            tvResults = {tvResults}\r\n            loading = {loading}\r\n            error = {error}\r\n            searchTerm = {searchTerm}\r\n            handleSubmit = {this.handleSubmit}\r\n            updateTerm={this.updateTerm}\r\n            />\r\n        )\r\n    }\r\n}","import SearchContainer from \"./SearchContainer\"\r\n\r\nexport default SearchContainer","import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport styled from \"styled-components\"\r\nimport Helmet from \"react-helmet\"\r\nimport Loader from \"Components/Loader\";\r\n\r\nconst Container = styled.div`\r\n    height: calc(100vh - 50px);\r\n    width: 100%;\r\n    positiion: relative;\r\n    padding: 50px;\r\n`;\r\n\r\nconst Backdrop = styled.div`\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-image: url(${props => props.bgImage});\r\n    background-position: center center;\r\n    background-size: cover;\r\n    filter: blur(3px);\r\n    opacity: 0.5;\r\n    z-index: 0;\r\n`;\r\n\r\nconst Content = styled.div`\r\n    display: flex;\r\n    width: 100%;\r\n    position: relative;\r\n    z-index: 1;\r\n    height: 100%;\r\n`;\r\n\r\nconst Cover = styled.div`\r\n    width: 30%;\r\n    background-image: url(${props => props.bgImage});\r\n    background-position: center center;\r\n    background-size: cover;\r\n    height: 100%;\r\n    border-radius: 5px;\r\n`;\r\n\r\nconst Data = styled.div`\r\n    width: 70%;\r\n    margin-left: 10px;\r\n`;\r\n\r\nconst Title = styled.h3`\r\n    font-size: 32px;\r\n`;\r\n\r\nconst ItemContainer = styled.div`\r\n    margin: 20px 0;\r\n`;\r\n\r\nconst Item = styled.span``;\r\n\r\nconst Divider = styled.span`\r\n    margin: 0 10px;\r\n`;\r\n\r\nconst Overview = styled.p`\r\n    font-size: 12px;\r\n    opacity: 0.7;\r\n    line-height: 1.5;\r\n    width: 50%;\r\n`;\r\n\r\n\r\nconst DetailPresenter = ({ result, loading, error}) => \r\n   loading ? (\r\n       <>\r\n       <Helmet>\r\n           <title>Loading | Nomfilx</title>\r\n        </Helmet>\r\n       <Loader />\r\n       </>\r\n   ) : (\r\n    <Container>\r\n         <Helmet>\r\n            <title> \r\n               {result.original_title ? result.original_title : result.original_name}{\" \"}\r\n               | Nomfilx\r\n            </title>\r\n        </Helmet>\r\n        <Backdrop \r\n            bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`} \r\n        />\r\n        <Content>\r\n            <Cover\r\n             bgImage={\r\n                 result.poster_path\r\n                    ? `https://image.tmdb.org/t/p/original${result.poster_path}`\r\n                    : require(\"../../assets/noPosterSmall.png\")\r\n                }  \r\n            />\r\n            <Data>\r\n                <Title>\r\n                    {result.original_title \r\n                        ? result.original_title \r\n                        : result.original_name}\r\n                </Title>\r\n                <ItemContainer>\r\n                    <Item>\r\n                        { result.release_date \r\n                            ? result.release_date.substring(0,4) \r\n                            : result.first_air_date.substring(0,4) }\r\n                    </Item>\r\n                    <Divider>▪</Divider>\r\n                    <Item>\r\n                        { result.runtime \r\n                                ? result.runtime \r\n                                : result.episode_run_time[0] } min\r\n                    </Item>\r\n                    <Divider>▪</Divider>\r\n                    <Item>\r\n                      {result.genres &&\r\n                        result.genres.map((genre, index) => \r\n                            index === result.genres.length - 1\r\n                                ? genre.name \r\n                                : `${genre.name} / `\r\n                         )}\r\n                    </Item>\r\n                </ItemContainer>\r\n                <Overview>{result.overview}</Overview>\r\n            </Data>\r\n        </Content>\r\n    </Container>\r\n   )\r\n\r\n\r\nDetailPresenter.propTypes = {\r\n    result:PropTypes.object,\r\n    loading:PropTypes.bool.isRequired,\r\n    error:PropTypes.string\r\n}\r\n\r\nexport default DetailPresenter","import React from \"react\"\r\nimport DetailPresenter from \"./DetailPresenter\"\r\nimport { movieApi, tvApi } from \"api\";\r\n\r\nexport default class extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        const {\r\n            location: { pathname }\r\n        } = props;\r\n        this.state = {\r\n            result: null,\r\n            error: null,\r\n            loading: true,\r\n            isMovie: pathname.includes(\"/movie/\")\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const {\r\n            match: {\r\n                params: { id }\r\n            },\r\n            history: { push }\r\n        } = this.props;\r\n        const { isMovie } = this.state;\r\n        const parsedId = parseInt(id)\r\n        if (isNaN(parsedId)) {\r\n            return push(\"/\")\r\n        }\r\n        let result =  null;\r\n        try {\r\n            if (isMovie) {\r\n                ({ data: result} = await movieApi.movieDetail(parsedId));\r\n            } else {\r\n                ({ data: result}= await tvApi.showDetail(parsedId));\r\n            }\r\n        } catch {\r\n            this.setState ({\r\n                error: \"Can't find anything.\"\r\n            })\r\n        } finally {\r\n            this.setState ({\r\n                loading: false, \r\n                result\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { result, error, loading} = this.state;\r\n        return <DetailPresenter result={result} error={error} loading={loading} />\r\n    }\r\n}","import DetailContainer from \"./DetailContainer\"\r\n\r\nexport default DetailContainer","import React from \"react\"\r\nimport { BrowserRouter as Router, Route, Redirect, Switch} from \"react-router-dom\"\r\nimport Home from \"Routes/Home\"\r\nimport TV from \"../Routes/TV/index\"\r\nimport Header from \"Components/Header\"\r\nimport Search from \"../Routes/Search/index\"\r\nimport Detail from \"Routes/Detail\"\r\n\r\nexport default () => (\r\n    <Router>\r\n        <>\r\n        <Header />\r\n        <Switch>\r\n            <Route path=\"/\" exact component= {Home}/>\r\n            <Route path=\"/tv\" component= {TV}/>\r\n            <Route path=\"/search\" component= {Search}/>\r\n            <Route path=\"/movie/:id\" component= {Detail} />\r\n            <Route path=\"/show/:id\" component= {Detail} />\r\n            <Redirect from=\"*\" to=\"/\" />\r\n        </Switch>\r\n        </>\r\n    </Router>\r\n)","import { createGlobalStyle } from \"styled-components\";\r\nimport reset from \"styled-reset\"\r\n\r\nconst globalStyles = createGlobalStyle`\r\n    ${reset}\r\n    a{\r\n        text-decoration:none;\r\n        color: inherit;\r\n    }\r\n    *{\r\n        box-sizing:border-box;\r\n    }\r\n    body {\r\n        font-family:-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\r\n        font-size: 12px;\r\n        background-color:rgba(20,20,20,1);\r\n        color: white;\r\n        padding-top: 50px;\r\n    }\r\n`;\r\n\r\nexport default globalStyles","import React, {Component} from \"react\"\nimport Router from \"Components/Router\"\nimport GlobalStyles from \"Components/GlobalStyles\"\n\nfunction App() {\n  return (\n    <>\n    <Router />\n    <GlobalStyles />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'Components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}